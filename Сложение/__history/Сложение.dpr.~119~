program Сложение;
{
 Adding two numbers (around 255 digit in each)
}

{$APPTYPE CONSOLE}

uses
  System.SysUtils;

var
  Num_1, Num_2: string;
  I, j, Z, RankOfNumber, Border: integer;
  L: boolean;
  ArrayOfSum: array [1 .. 256] of integer;
  // Num_1, Num_2 - numbers, which must be added
  // I, J, Border - auxiliary variables for counting
  // RunkOfNumber - intermediate value of n-digit addition of numbers
  // Z - variable of sign of number
  // ArrayOfSum - array to add Num_1 and Num_2
  // L - variable to check for errors

const
  LengthA = length(ArrayOfSum) + 1;
  // LengthA - Length ArrayOfSum

begin

  // Requiring the first number
  Repeat
    Write('Введите первое число: ');
    readln(Num_1);

    // Checking for sign of the first number
    if Num_1[1] = '-' then
    Begin
      Delete(Num_1, 1, 1);
      Z := -1;
    End
    else
      z := 1;

    j := length(Num_1);

    // Trying convert string of the first number to array of it
    Try
      begin

        // Inicialization from last digit to the first
        // to array element from the end of it
        for I := (LengthA-1) downto (LengthA - length(Num_1)) do
        Begin
          ArrayOfSum[I] := z*StrToInt(Num_1[j]);
          
          j := j - 1;
        End;

        L := True;
      end;
    except
      on e: EConvertError do
      begin
        Writeln('Вы ввели не число! Повторите попытку!');
        Writeln('');

        L := False;
      end;

    End;
  Until L;

  Repeat

    // Requiring the second number
    Write('Введите второе число: ');
    readln(Num_2);

    // Checking for sign of the second number
    if Num_2[1] = '-' then
    Begin
      Delete(Num_2, 1, 1);
      Z := -1;
    End
    else
      z := 1;

    J := length(Num_2);

    Try
      begin
        // Seting the border of adding digits
        Border := LengthA - Length(Num_2);

        I := (LengthA-1);

        While I >= Border do
        Begin

          // A new rank of the sum
          If ArrayOfSum[I] = 10 then
          Begin
            ArrayOfSum[I] := 0;
            ArrayOfSum[I-1] := ArrayOfSum[I-1] + 1;

            // Increasing border and length of the sum
            // as we have a new rank of the sum
            if I = border then
            begin
              Border := Border - 1;
            end;

          End;

          // If the second number isn't over
          If j <> 0 then
          begin
            RankOfNumber := ArrayOfSum[I] + z*StrToInt(Num_2[j]);

            // If the digit is negative to deleting the sign
            if (RankOfNumber < 0) then
            Begin
              If (Length(Num_1) < length(Num_2)) and (I > Border) then
                RankOfNumber := -RankOfNumber;
              If (Length(Num_1) > length(Num_2)) then
                RankOfNumber := -RankOfNumber;
            End;

            // A new rank of the sum
            if RankOfNumber > 9 then
            Begin
              // Increasing border as we have a new rank of the sum
              if I = border then
                Border := Border - 1;

              // Changing the rank
              ArrayOfSum[I] := RankOfNumber - 10;
              ArrayOfSum[I-1] := ArrayOfSum[I-1] + 1;
            End
            Else
              ArrayOfSum[I] := RankOfNumber;

            j := j - 1;
          end;

          I := I - 1;
        End;

        L := True;
      end;

    except
      on e: EConvertError do
      begin
        Writeln('Вы ввели не число! Повторите попытку!');

        L := False;
      end;

    End;

  Until L;

  Write('Сумма чисел ', (z*StrToInt(Num_1)), ' и ');
  Write((z*StrToInt(Num_2)), ' равна ');

  // Outputting the sum
  J := (LengthA - length(Num_1)) - 1;
  if ArrayOfSum[J] = 0 then
    While ArrayOfSum[J] = 0 do
      J := J + 1;

  for I := J to (LengthA - 1) do
    Write(ArrayOfSum[I]);


  readln;
end.
